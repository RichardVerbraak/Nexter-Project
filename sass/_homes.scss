.homes {
    grid-column: center-start / center-end;
    display: grid;
    margin: 15rem 0;

    grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
    grid-gap: 7rem;
}

// best practice to let the rows sort themselves but it's not always possible (so using implicit grid)
.home {
    background-color: $color-grey-light-1;

    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-row-gap: 3.5rem;

    // z-index to make sure its always on top (the heart)
    &__img {
        width: 100%;
        grid-column: 1 / -1;
        grid-row: 1 / 2;
        z-index: 1;
    }

    &__heart {
        fill: $color-primary;
        height: 2.5rem;
        width: 2.5rem;
        grid-row: 1 / 2;
        grid-column: 2 / 3;
        z-index: 2;
        justify-self: end;
        margin: 1rem;
    }

    &__name {
        grid-column: 1 / -1;
        grid-row: 1 / 2;
        z-index: 5;
        
        // align name center
        width: 80%;
        justify-self: center;
        align-self: end;

        font-family: $font-display;
        font-size: 1.6rem;
        text-align: center;
        padding: 1.25rem;
        background-color: $color-secondary;
        color: #fff;
        font-weight: 400;

        // 50% of the height of the element itself so it's centered
        transform: translateY(50%);       
    }

    // Cant choose different values for differing row or column gaps so this is the best solution
    &__location,
    &__rooms {
        margin-top: 2.5rem;
    }

    &__location,
    &__rooms,
    &__area,
    &__price {
        display: flex;
        align-items: center;

        font-size: 1.5rem;
        margin-left: 2rem;

        svg {
            fill: $color-primary;
            height: 2rem;
            width: 2rem;
            margin-right: 1rem;
        }
    }

    &__button {
        grid-column: 1 / -1;
    }
}